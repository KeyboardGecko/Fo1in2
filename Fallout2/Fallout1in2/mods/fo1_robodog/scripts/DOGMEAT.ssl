/*

   Dogmeat - Party Member, Junktown

      Turned into Robodog!
         Arr-Woof <bzzzt> \o/

*/

#include "define.h"
#include "maps/junkcsno.h"

#define NAME                                 SCRIPT_DOGMEAT

#include "command.h"
#include "modreact.h"

#undef  set_default_party_follow
#define set_default_party_follow             set_follow_close

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure push_p_proc;

procedure Node998;
procedure Node999;

procedure dog_joins_dude;
procedure dog_remove_party;
procedure dog_join_party;
procedure dog_end;
procedure dog00;

// Party dialog related
procedure dog_distance;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;

procedure flip_light;
procedure Heal_Robo(variable bonus);

variable tmp_hostile;

variable IdenOnce;

#define LVAR_Herebefore                   (4)
#define LVAR_WAITING                      (10)
#define LVAR_FOLLOW_DISTANCE              (11)
#define LVAR_TEAM                         (12)
#define LVAR_Heal_Count                   (13)
#define LVAR_Heal_Dec_Time                (14)
#define LVAR_LightSwitch                  (15)

#define MULTI_TOOL 10
#define SUPER_TOOL 30

#define dog_mstr(x)                       message_str(SCRIPT_ALLDOGS, x)
#define dog_float(x)                      float_msg(self_obj, dog_mstr(x), FLOAT_MSG_NORMAL)

#define dogmeat_joins_party               party_add_self;                              \
                                          add_timer_event(self_obj, game_ticks(1), 2); \
                                          set_self_team(TEAM_PLAYER)
#define dude_has_free_slot_for_dogmeat    fo1in2_party_limit_disabled or ((dude_at_max_party_size == false) and (Dog_In_Party == false))
#define EVENT_FLOAT_JOIN                  (2)

#define LIGHT_ON           (2)
#define LIGHT_OFF          (3)
#define set_light_on       set_local_var(LVAR_LightSwitch, LIGHT_ON); \
                           obj_set_light_level(self_obj, 100, 8)
#define set_light_off      set_local_var(LVAR_LightSwitch, LIGHT_OFF); \
                           obj_set_light_level(self_obj, 0, 0)
#define get_light_on       (local_var(LVAR_LightSwitch) == LIGHT_ON)
#define get_light_off      (local_var(LVAR_LightSwitch) == LIGHT_OFF)


procedure Node998 begin
end
procedure Node999 begin
end

procedure start begin
end

procedure push_p_proc begin
   if Dog_In_Party then begin
      float_msg(self_obj, mstr(random(117,120)), FLOAT_MSG_NORMAL);
   end
   else begin
      script_overrides;
   end
end

procedure critter_p_proc begin
   if not(global_var(GVAR_DOGMEAT_HIRELING_STATUS)) then begin
      if (local_var(LVAR_Herebefore) == 0) then begin
         if (self_can_see_dude) then begin
            if dude_armor then begin
               variable JacketCheck;
               JacketCheck := dude_armor;
               if (obj_pid(JacketCheck) == PID_LEATHER_JACKET) then begin
                  set_local_var(LVAR_Herebefore, 1);
                  display_msg(dog_mstr(115));
                  call dog_joins_dude;
               end
            end

         end
      end
   end

   if Dog_In_Party then begin
      party_member_follow_dude
   end
   else if (local_var(LVAR_Herebefore) == 0) then begin
      if (CUR_MAP_JUNKCSNO) then begin
         if (map_var(MVAR_Phil_approaches)) then begin
            if (map_var(MVAR_dog_is_angry)) then begin
               add_timer_event(self_obj, game_ticks(6), 1);
            end
            set_map_var(MVAR_Phil_approaches, 0);
         end
      end
   end
end

procedure destroy_p_proc begin
   set_global_var(GVAR_DOGMEAT_HIRELING_STATUS, 3);

   if obj_in_party(source_obj) then begin
      if (CUR_MAP_JUNKCSNO) then begin
         set_global_var(GVAR_DOGMEAT_KILLED, 2);
         set_global_var(GVAR_DOGMEAT_SOMETHING_1, 2);

         display_msg(dog_mstr(116));
         give_exp_points(EXP_GET_RID_OF_DOGMEAT);

         set_map_var(MVAR_dog_is_angry, 0);
         set_map_var(MVAR_growling, 0);
      end
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if global_var(GVAR_DOGMEAT_HIRELING_STATUS) != 0 then begin
      if IdenOnce != 1 then begin
         display_msg(mstr(100));
         IdenOnce := 1;
      end
      else begin
         display_msg(mstr(110));
      end
   end
   else begin
      display_msg(mstr(101));
   end
end

procedure map_enter_p_proc begin
   if (self_fid != FID_MACYBR) then
      art_change_fid_num(self_obj, FID_MACYBR);

   if Dog_In_Party then begin
      set_self_team(TEAM_PLAYER);
   end
   else begin
      set_self_team(TEAM_RAIDERS);
   end

   if ((CUR_MAP_JUNKCSNO) and (global_var(GVAR_DOGMEAT_HIRELING_STATUS) == 0) and (local_var(LVAR_Herebefore) == 0)) then begin
      set_map_var(MVAR_dog_is_angry, 1);
   end
end

procedure map_update_p_proc begin
   if get_light_on then
      obj_set_light_level(self_obj, 100, 8);
end

procedure pickup_p_proc begin
   script_overrides;
end

procedure talk_p_proc begin
   dude_look_at_self;

   if (local_var(LVAR_Herebefore) == 1) then begin// + "and (dude_iq > 3))" previously. --Sduibek
      start_dialog_at_node(dog00);
   end
   else begin
      float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
   end
   if (Katja_ptr != 0) then begin
      float_msg(Katja_ptr, message_str(SCRIPT_KATJA, 175), FLOAT_MSG_PURPLE);
   end
end

procedure timed_event_p_proc begin
   if (fixed_param == EVENT_FLOAT_JOIN) then begin
      dog_float(random(122, 123));
   end
   else begin
      float_msg(self_obj, mstr(103), FLOAT_MSG_NORMAL);
      if (CUR_MAP_JUNKCSNO) then begin
         set_map_var(MVAR_growling, 1);
         set_map_var(MVAR_smartass_2, 1);
      end
   end
end

procedure use_obj_on_p_proc begin
   variable item;
   item := obj_pid(obj_being_used_with);

   if Dog_In_Party then begin
      if (item == PID_MULTI_TOOL) then begin
         script_overrides;
         call Heal_Robo(MULTI_TOOL);
      end else if (item == PID_SUPER_TOOL_KIT) then begin
         script_overrides;
         call Heal_Robo(SUPER_TOOL);
      end
   end
   else if ((item == PID_MEAT_ON_A_STICK) or (item == PID_IGUANA_ON_A_STICK)) then begin
      if (not(global_var(GVAR_DOGMEAT_HIRELING_STATUS)) and (local_var(LVAR_Herebefore) == 0)) then begin
         set_local_var(LVAR_Herebefore, 1);
         display_msg(dog_mstr(104));
         call dog_joins_dude;
      end
      else begin
         critter_heal(self_obj, 5);
      end
   end
end

procedure dog_joins_dude begin
   give_xp_msg(EXP_DOGMEAT_JOINS_PARTY, dog_mstr(114));

   set_global_var(GVAR_DOGMEAT_HIRELING_STATUS, 1);
   set_local_var(LVAR_Herebefore, 1);
   //set_global_var(GVAR_DOGMEAT_SOMETHING_1, 2);
   //set_global_var(GVAR_DOGMEAT_SOMETHING_0, 2);

   dogmeat_joins_party;

   set_self_team(TEAM_PLAYER);
   if (CUR_MAP_JUNKCSNO) then begin
      set_map_var(MVAR_dog_is_angry, 0);
   end
end

procedure dog_remove_party begin
   set_global_var(GVAR_DOGMEAT_HIRELING_STATUS, 0);
   set_party_waiting;
end

procedure dog_join_party begin
   if dude_has_free_slot_for_dogmeat then begin
      set_global_var(GVAR_DOGMEAT_HIRELING_STATUS, 1);
      dogmeat_joins_party;
   end
   else begin
      Reply(2500);
      NOption(2510, Node999, 004);
   end
end

procedure dog_end begin
   //float_msg(self_obj, mstr(random(117,120)), FLOAT_MSG_NORMAL);
end

procedure dog00 begin
variable Perception_Roll;

   Reply(random(117,120));
   if (global_var(GVAR_DOGMEAT_HIRELING_STATUS) == 0) then begin
      GOption(dog_mstr(118), dog_join_party, 004);
      GLowOption(dog_mstr(300), dog_join_party);
   end
   else begin
      NOption(dog_mstr(119), dog_remove_party, 004);
      NLowOption(dog_mstr(301), dog_remove_party);

      // Find light switch function
      if (local_var(LVAR_LightSwitch) == 0) then begin
         Perception_Roll := do_check(dude_obj, STAT_pe, 1);
         if (is_success(Perception_Roll)) then begin
            set_local_var(LVAR_LightSwitch, 1);
            NOption(300, flip_light, 004);
            NLowOption(308, flip_light);
         end
      end
      else if (local_var(LVAR_LightSwitch) == 1) then begin
         NOption(300, flip_light, 004);
         NLowOption(308, flip_light);
      end
      else if get_light_on then begin
         NOption(305, flip_light, 001);
      end
      else if get_light_off then begin
         NOption(304, flip_light, 001);
      end

      NOption(200, dog_distance, 004);
   end
   GOption(dog_mstr(120), dog_end, 004);
   GLowOption(dog_mstr(304), dog_end);
end

procedure dog_distance begin
   Reply(120);
   NOption(def_close_msg, Node1004, 004);
   NOption(def_med_msg, Node1005, 004);
   NOption(def_far_msg, Node1006, 004);
   GOption(201, dog_end, 004);
end

procedure Node1004 begin // follow close
   set_follow_close;
   call Node1007;
end

procedure Node1005 begin// follow medium
   set_follow_medium;
   call Node1007;
end

procedure Node1006 begin // follow far
   set_follow_far;
   call Node1007;
end

procedure Node1007 begin
   if (local_var(LVAR_FOLLOW_DISTANCE) == FOLLOW_DISTANCE_CLOSE) then begin
      NMessage(121);
   end else if (local_var(LVAR_FOLLOW_DISTANCE) == FOLLOW_DISTANCE_MEDIUM) then begin
      NMessage(121);
   end else if (local_var(LVAR_FOLLOW_DISTANCE) == FOLLOW_DISTANCE_FAR) then begin
      NMessage(121);
   end
   call dog00;
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_REPAIR and Dog_In_Party) then begin
      script_overrides;
      call Heal_Robo(0);
   end
end

procedure flip_light begin
   if (local_var(LVAR_LightSwitch) == 1) then begin
      set_light_on;
      Reply(mstr(301) + mstr(306));
      NOption(302, Node999, 004);
      NOption(303, flip_light, 004);

      NLowOption(309, Node999);
      NLowOption(310, flip_light);
   end
   else if get_light_on then begin
      set_light_off;
      NMessage(307);
   end
   else if get_light_off then begin
      set_light_on;
      NMessage(306);
   end
end

procedure Heal_Robo(variable bonus) begin
   if (local_var(LVAR_Heal_Count) < has_skill(source_obj, SKILL_REPAIR)) then begin
      if (skill_success(source_obj, SKILL_REPAIR, bonus)) then begin
         critter_heal(self_obj, Random(10, 40));
         set_local_var(LVAR_Heal_Count, local_var(LVAR_Heal_Count) + 50);
      end

      if (self_cur_hp != self_max_hp) then begin
         display_mstr(901);
      end else begin
         display_mstr(902);
      end
   end else begin
      display_mstr(900);
   end
end
