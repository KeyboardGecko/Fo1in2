/*

   Master's Lair - Mutant medic - cut content.

*/

/* Include Files */
#include "define.h"
#include "area/cathedral.h"

#define NAME                    SCRIPT_SMONE
#define TOWN_REP_VAR            (GVAR_TOWN_REP_CATHEDRAL)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */
procedure start;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;

procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;

procedure zamin;
procedure combat;

#define LVAR_FloatMSG      (1)
#define LVAR_FloatStart    (2)
#define LVAR_LetsGo        (3)
#define LVAR_Visible       (4)

import variable patient;
import variable lets_go;

variable tmp_hostile;
variable Only_Once := 1;
variable PICK;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_AGGRESSIVE);
   end

   if fo1in2_cut_characters_enabled then begin
      if ((days_since_visited > 0) or (local_var(LVAR_Visible) == 1)) then begin
         set_local_var(LVAR_Visible, 1);
         set_self_visible;
      end
      else begin
         set_self_invisible;
      end
   end
   else begin
      destroy_object(self_obj);
   end
end

procedure timed_event_p_proc begin
   if (tmp_hostile < 1) then begin
      inc_local_var(LVAR_FloatMSG);
      call goto00;
   end
end

procedure critter_p_proc begin
   if (tmp_hostile) then begin
      tmp_hostile := 0;
      attack(dude_obj);
   end

   if not(combat_is_initialized) then begin
      if (self_tile == hex_elevator_0) then begin
         move_to(self_obj, 7000, 0);
      end
      else if self_visible and (tile_distance(self_tile, dude_tile) < 12) then begin
         if (local_var(LVAR_FloatStart) != 1) then begin
            set_local_var(LVAR_FloatStart, 1);
            add_timer_event(self_obj, game_ticks(1), 0);
         end
      end

      if self_can_see_dude then begin
         call zamin;
         if (dude_is_armed or not(DISGUISED)) then begin
            call combat;
         end
      end

      if (lets_go == 1) then begin
         self_walk_to_tile(hex_elevator_0);
      end
   end

   // Failsafe on game reload
   if ((local_var(LVAR_LetsGo) == 1) and (lets_go == 0)) then begin
      lets_go := 1;
   end
end

procedure pickup_p_proc begin
   if source_is_dude then begin
      tmp_hostile := 1;
   end
end

procedure talk_p_proc begin
   dude_look_at_self;
   call zamin;
   if (dude_is_armed or not(DISGUISED)) then begin
      call combat;
   end
end

procedure destroy_p_proc begin
   inc_inv_evil_crit
end

procedure zamin begin
   coc_disguise_check;
end

procedure combat begin
   tmp_hostile := 1;
end

procedure goto00 begin
   PICK := local_var(LVAR_FloatMSG);
   if (PICK == 1) then begin
      display_msg(mstr(100));
      float_msg(self_obj, message_str(SCRIPT_SMONE, 101), FLOAT_MSG_RED);
   end
   else if (PICK == 2) then
      float_msg(patient, message_str(SCRIPT_SMONE, 102), FLOAT_MSG_YELLOW);
   else if (PICK == 3) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 103), FLOAT_MSG_RED);
   else if (PICK == 4) then
      call goto01;
   else if (PICK == 5) then
      call goto02;
   else if (PICK == 6) then
      float_msg(patient, message_str(SCRIPT_SMONE, 108), FLOAT_MSG_YELLOW);
   else if (PICK == 7) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 109), FLOAT_MSG_RED);
   else if (PICK == 8) then
      float_msg(patient, message_str(SCRIPT_SMONE, 110), FLOAT_MSG_YELLOW);
   else if (PICK == 9) then
      call goto03;
   add_timer_event(self_obj, game_ticks(4), 1);
end

procedure goto01 begin
   if (dude_is_male) then
      float_msg(patient, message_str(SCRIPT_SMONE, 104), FLOAT_MSG_YELLOW);
   else
      float_msg(patient, message_str(SCRIPT_SMONE, 105), FLOAT_MSG_YELLOW);
end

procedure goto02 begin
   if (dude_is_male) then
      float_msg(self_obj, message_str(SCRIPT_SMONE, 106), FLOAT_MSG_RED);
   else
      float_msg(self_obj, message_str(SCRIPT_SMONE, 107), FLOAT_MSG_RED);
end

procedure goto03 begin
   set_local_var(LVAR_LetsGo, 1);
   lets_go := 1;
   self_walk_to_tile(hex_elevator_0);
end
