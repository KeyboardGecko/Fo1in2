/*

   Military Base - Robot control terminal

*/

#include "define.h"
#include "area/mbase.h"
#include "maps/mbstrg12.h"

#define NAME                    SCRIPT_ROBCTRL

#include "command.h"

procedure start;
procedure description_p_proc;
procedure talk_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;

procedure Control00;
procedure Control01;
procedure Control02;
procedure Control03;
procedure Control04;
procedure Control05;
procedure Control06;
procedure Control07;
procedure Control08;
procedure Control08a;
procedure Control08b;
procedure Control08c;
procedure Control09;
procedure Control09a;
procedure Control09b;
procedure Control10;
procedure Control10a;
procedure Control10b;
procedure Control10c;
procedure Control10d;
procedure Control10e;
procedure Control11;
procedure Control12;
procedure Control13;
procedure Control14;
procedure Control15;
procedure Control16;
procedure Control16a;
procedure Control17;
procedure Control18;
procedure Control19;
procedure Control20;
procedure Control21;
procedure Control22;
procedure Control23;
procedure Control24;
procedure Control25;
procedure Controlend;

#define LVAR_Status           (0)
#define LVAR_Herebefore       (1)

variable rndx;
variable chance;

procedure start begin
end

procedure description_p_proc begin
   script_overrides;
   display_msg(mstr(100));
end

procedure talk_p_proc begin
   dude_look_at_self;
   start_gdialog(368, self_obj, 4, -1, -1);
   gsay_start;

   if (local_var(LVAR_Status) == 1) then
      NMessage(101);
   else if (local_var(LVAR_Herebefore) == 1) then
      call Control14;
   else
      call Control00;

   gsay_end;
   end_dialogue;
end

procedure use_p_proc begin
   script_overrides;
   display_msg(mstr(196));
end

procedure use_obj_on_p_proc begin
   if (obj_pid(obj_being_used_with) == PID_RADIO) then begin
      display_msg(mstr(195));
   end
end

procedure use_skill_on_p_proc begin
   if (action_being_used == SKILL_REPAIR) then begin
      script_overrides;
      display_msg(mstr(197));
   end
   else if (action_being_used == SKILL_SCIENCE) then begin
      script_overrides;
      dialogue_system_enter;
   end
end

procedure Control00 begin
   set_local_var(LVAR_Herebefore, 1);
   Reply(102);
   NLowOption(103, Control01);
   NOption(104, Control03, 4);
   NOption(105, Control03, 6);
   NOption(106, Control06, 8);
end

procedure Control01 begin
   Reply(107);
   NLowOption(108, Control01);
   NLowOption(109, Control01);
   NLowOption(110, Control02);
   NLowOption(111, Control01);
end

procedure Control02 begin
   NMessage(112);
end

procedure Control03 begin
   Reply(113);
   NOption(114, Controlend, 6);
   NOption(115, Control04, 6);
   NOption(116, Control06, 6);
end

procedure Control04 begin
   Reply(117);
   NOption(118, Control05, 6);
   NOption(119, Control06, 6);
end

procedure Control05 begin
   Reply(120);
   NOption(121, Control06, 6);
end

procedure Control06 begin
   Reply(122);
   NOption(123, Control07, 6);
   NOption(124, Control07, 6);
   NOption(125, Control07, 6);
   NOption(126, Control07, 6);
   NOption(127, Controlend, 6);
end

procedure Control07 begin
   Reply(128);
   NOption(129, Control08, 6);
   NOption(130, Control09, 6);
   NOption(131, Control10, 6);
   NOption(132, Control11, 6);
   NOption(133, Controlend, 6);
end

procedure Control08 begin
   Reply(134);
   NOption(135, Control08a, 6);
   NOption(136, Control08b, 6);
   NOption(137, Control08c, 6);
end

procedure Control08a begin
   set_robo_max_movement;
   call Control12;
end

procedure Control08b begin
   set_robo_half_movement;
   call Control12;
end

procedure Control08c begin
   set_robo_min_movement;
   call Control12;
end

procedure Control09 begin
   Reply(138);
   NOption(139, Control09a, 6);
   NOption(140, Control09b, 6);
end

procedure Control09a begin
   set_robo_full_sensors;
   call Control12;
end

procedure Control09b begin
   set_robo_minimal_sensors;
   call Control12;
end

procedure Control10 begin
   Reply(141);
   NOption(142, Control10a, 6);
   NOption(143, Control10b, 6);
   NOption(144, Control10c, 6);
   NOption(145, Control10d, 6);
   NOption(146, Control10e, 6);
end

procedure Control10a begin
   set_robo_attack_all_pests;
   call Control12;
end

procedure Control10b begin
   set_robo_attack_no_pests;
   call Control12;
end

procedure Control10c begin
   set_robo_attack_small_pests;
   call Control12;
end

procedure Control10d begin
   set_robo_attack_large_pests;
   call Control12;
end

procedure Control10e begin
   set_robo_attack_unauth_pests;
   call Control12;
end

procedure Control11 begin
   chance := 4 * 10;
   if (chance < 5) then
      chance := 5;
   if (chance > 95) then
      chance := 95;

   rndx := random(1, 100);
   if (rndx < chance) then
      NMessage(147);
   else
      NMessage(148);
end

procedure Control12 begin
   Reply(149);
   NOption(150, Control08, 6);
   NOption(151, Control09, 6);
   NOption(152, Control10, 6);
   NOption(153, Control11, 6);
   NOption(154, Controlend, 6);
end

procedure Control13 begin
   Reply(155);
   NOption(156, Control08, 6);
   NOption(157, Control09, 6);
   NOption(158, Control10, 6);
   NOption(159, Control11, 6);
   NOption(160, Controlend, 6);
end

procedure Control14 begin
   Reply(161);
   NLowOption(103, Control01);
   NOption(104, Control03, 4);
   NOption(105, Control03, 6);
   NOption(163, Control13, 6);
   NOption(164, Control15, 6);
   NOption(165, Control16, 6);
   NOption(166, Control23, 6);
   NOption(167, Controlend, 6);
end

procedure Control15 begin
   Reply(168);
   NOption(169, Control13, 6);
   NOption(170, Control16, 6);
   NOption(171, Control23, 6);
   NOption(172, Controlend, 6);
end

procedure Control16 begin
   Reply(173);
   NOption(174, Control13, 6);
   NOption(175, Control16a, 6);
end

procedure Control16a begin
   if (dude_skill_success(SKILL_SCIENCE, 0)) then begin
      call Control17;
   end
   else begin
      call Control22;
   end
end

procedure Control17 begin
   Reply(176);
   NOption(177, Control18, 6);
   NOption(178, Control19, 6);
end

procedure Control18 begin
   Reply(179);
   NOption(180, Control13, 6);
   NOption(181, Controlend, 6);
end

procedure Control19 begin
   Reply(182);
   NOption(183, Control13, 6);
   NOption(184, Controlend, 6);
   NOption(185, Control20, 6);
end

procedure Control20 begin
   Reply(186);
   NOption(187, Control21, 6);
end

procedure Control21 begin
   set_local_var(LVAR_Status, 1);
   NMessage(188);
end

procedure Control22 begin
   NMessage(189);
end

procedure Control23 begin
   Reply(190);
   NOption(191, Control24, 6);
   NOption(192, Control25, 6);
end

procedure Control24 begin
   set_local_var(LVAR_Status, 1);
   NMessage(193);
end

procedure Control25 begin
   NMessage(194);
end

procedure Controlend begin
end
