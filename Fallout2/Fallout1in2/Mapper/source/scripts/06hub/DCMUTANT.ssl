/*

   Hub - Dying Mutant

*/

/* Include Files */
#include "define.h"
//#include "area/necropolis.h"

#define NAME                    SCRIPT_DCMUTANT
#define TOWN_REP_VAR            (GVAR_TOWN_REP_HUB)

#include "command.h"
#include "modreact.h"

/* Standard Script Procedures */

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;

procedure Mutant00;
procedure Mutant01;
procedure Mutant02;
procedure Mutant03;

#define LVAR_MutantDead       (5)

variable Only_Once := 1;
variable lastBabble;
variable kill_me;

procedure start begin
   if Only_Once then begin
      Only_Once := 0;
      set_self_team(TEAM_NECROPOLIS_MUTANT);
      set_self_ai(AI_SUPER_MUTANT_NORMAL);
      anim(self_obj, ANIM_fall_back_sf, 0);
   end
end

procedure critter_p_proc begin
   if not(local_var(LVAR_MutantDead)) and (((game_time / 10) - lastBabble) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 15) then begin
      lastBabble := game_time / 10;
      float_msg(self_obj, mstr(random(111, 113)), FLOAT_MSG_RED);
   end
end

procedure combat_p_proc begin
   script_overrides;
end

procedure talk_p_proc begin
   dude_look_at_self;
   if (local_var(LVAR_MutantDead) == 1) then begin
      display_msg(mstr(103));
   end
   else begin
      start_dialog_at_node(Mutant00);
   end
   if (kill_me == 1) then begin
      kill_me := 0;
      kill_critter(self_obj, ANIM_fall_back_sf);
   end
end

procedure destroy_p_proc begin
   inc_neutral_critter
end

procedure look_at_p_proc begin
   script_overrides;
   if (local_var(LVAR_MutantDead) == 0) then begin
      display_msg(mstr(100));
   end
   else begin
      display_msg(mstr(102));
   end
end

procedure use_skill_on_p_proc begin
   script_overrides;
   dialogue_system_enter;
end

procedure use_obj_on_p_proc begin
   script_overrides;
   dialogue_system_enter;
end

procedure Mutant00 begin
   Reply(104);
   NOption(105, Mutant01, 4);
end

procedure Mutant01 begin
variable Item;

   set_global_var(GVAR_MISSING_CARAVAN, 2);
   Reply(106);

   if self_item_count(PID_MUTANT_TRANSMISSION_HOLODISK) > 0 then begin
      remove_pid_qty(self_obj, PID_MUTANT_TRANSMISSION_HOLODISK, 1);
      Item := create_object(PID_MUTANT_TRANSMISSION_HOLODISK, 0, 0);
      add_mult_objs_to_inven(dude_obj, Item, 1);
   end

   NOption(107, Mutant02, 4);
end

procedure Mutant02 begin
   Reply(108);
   set_global_var(GVAR_DCMUTANT_TOLD_NORTHWEST, 1);
   NOption(109, Mutant03, 4);
end

procedure Mutant03 begin
   set_local_var(LVAR_MutantDead, 1);
   kill_me := 1;
   NMessage(110);
end
